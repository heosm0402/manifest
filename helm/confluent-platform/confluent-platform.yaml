apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  dataVolumeCapacity: 10G
  image:
    application: docker.io/confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  replicas: 1
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
  configOverrides:
    server:
      - "confluent.license.topic.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1"
      - "confluent.tier.metadata.replication.factor=1"
      - "confluent.metadata.topic.replication.factor=1"
      - "confluent.balancer.topic.replication.factor=1"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
      - "event.logger.exporter.kafka.topic.replicas=1"
      - "offsets.topic.replication.factor=1"
      - "confluent.cluster.link.enable=true"
      - "password.encoder.secret=secret"
  dependencies:
    kRaftController:
      clusterRef:
        name: kraftcontroller
  metricReporter:
    enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server-connect:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  configOverrides:
    server:
      - config.storage.replication.factor=1
      - offset.storage.replication.factor=1
      - status.storage.replication.factor=1
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
---
#apiVersion: platform.confluent.io/v1beta1
#kind: KsqlDB
#metadata:
#  name: ksqldb
#  namespace: confluent
#spec:
#  replicas: 1
#  image:
#    application: confluentinc/cp-ksqldb-server:7.6.0
#    init: confluentinc/confluent-init-container:2.8.0
#  dataVolumeCapacity: 10Gi
#  internalTopicReplicationFactor: 1
#  dependencies:
#    schemaRegistry:
#      url: http://schemaregistry.confluent.svc.cluster.local:8081
#  podTemplate:
#    resources:
#      requests:
#        cpu: 100m
#        memory: 512Mi
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - confluent.controlcenter.command.topic.replication=1
      - confluent.controlcenter.replication.factor=1
      - confluent.metrics.reporter.topic.replicas=1
      - confluent.metrics.topic.replication=1
      - confluent.monitoring.interceptor.topic.replication=1
      - confluent.controlcenter.internal.topics.replication=1
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
    - name: ksqldb
      url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
    - name: connect
      url: http://connect.confluent.svc.cluster.local:8083
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
---
#apiVersion: platform.confluent.io/v1beta1
#kind: KafkaRestProxy
#metadata:
#  name: kafkarestproxy
#  namespace: confluent
#spec:
#  replicas: 1
#  image:
#    application: confluentinc/cp-kafka-rest:7.6.0
#    init: confluentinc/confluent-init-container:2.8.0
#  dependencies:
#    schemaRegistry:
#      url: http://schemaregistry.confluent.svc.cluster.local:8081
#  podTemplate:
#    resources:
#      requests:
#        cpu: 100m
#        memory: 256Mi
